
# -*- coding: utf-8 -*-

from odoo import fields, api, exceptions, _
from datetime import datetime
from .. import surya
import json


class VendorSelection(surya.Sarpam):
    _name = "purchase.vs"
    _rec_name = "indent_id"
    _inherit = "mail.thread"

    date = fields.Date(string='Date', readonly=True)
    indent_id = fields.Many2one(comodel_name='purchase.indent',
                                domain="[('progress', '=', 'approved')]",
                                string='Purchase Indent',
                                readonly=True)
    quote_comparision = fields.Binary(string="Quote Comparision", readonly=True)
    selection_detail = fields.One2many(comodel_name='vs.detail',
                                       inverse_name='selection_id',
                                       string='Vendor Selection Details')
    writter = fields.Text(string="Writter", track_visibility='always')

    _sql_constraints = [('unique_indent', 'unique (indent_id)',
                         'Error! indent should not be repeated')]

    def default_vals_creation(self, vals):
        vals["date"] = datetime.now().strftime("%Y-%m-%d")

        return vals

    @api.multi
    def trigger_quote_creation(self):
        recs = self.selection_detail

        for rec in recs:
            rec.quote_detail_creation()

        person_id = self.env["hos.person"].search([("id", "=", self.env.user.person_id.id)])
        writter = "Quotation generated by {0}".format(person_id.name)

        self.write({"writter": writter})


class VSDetail(surya.Sarpam):
    _name = 'vs.detail'
    _description = 'Vendor Selection Details'

    product_id = fields.Many2one(comodel_name='hos.product', string='Product', readonly=True)
    uom_id = fields.Many2one(comodel_name='product.uom', string='UOM', related="product_id.uom_id")
    quantity = fields.Float(string='Quantity', readonly=True)

    vendor_ids = fields.Many2many(comodel_name='hos.person', string='Vendors')
    quote_detail = fields.One2many(comodel_name='vs.quote.detail', inverse_name='vs_quote_id',
                                   string='Quote Detail')
    comment = fields.Text(string='Comment')
    selection_id = fields.Many2one(comodel_name='purchase.vs', string='Vendor Selection')

    @api.multi
    def quote_detail_creation(self):
        for vendor in self.vendor_ids:
            quote = self.env["purchase.quotation"].search([("indent_id", "=", self.selection_id.indent_id.id),
                                                           ("vendor_id", "=", vendor.id)])

            if quote:
                quote_detail = self.env["vs.quote.detail"].search([("product_id", "=", self.product_id.id),
                                                                   ("quotation_id", "=", quote.id)])

                if not quote_detail:
                    self.env["vs.quote.detail"].create({"vendor_id": vendor.id,
                                                        "product_id": self.product_id.id,
                                                        "uom_id": self.uom_id.id,
                                                        "requested_quantity": self.quantity,
                                                        "vs_quote_id": self.id,
                                                        "quotation_id": quote.id})

            else:
                quotation_detail = [(0, 0, {"vendor_id": vendor.id,
                                            "product_id": self.product_id.id,
                                            "uom_id": self.uom_id.id,
                                            "vs_quote_id": self.id,
                                            "requested_quantity": self.quantity})]

                data = {"indent_id": self.selection_id.indent_id.id,
                        "vendor_id": vendor.id,
                        "vs_id": self.selection_id.id,
                        "quotation_detail": quotation_detail}

                self.env["purchase.quotation"].create(data)
